imports:
    - { resource: parameters_test.yml }

# Framework Configuration
framework:
    esi:             ~
    fragments:       { path: /_proxy }
    translator:      { fallback: "%locale%" }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: %kernel.debug%
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: 201204261
        assets_base_urls:
            http: [%cdn_url%]
            ssl: [%cdn_url_ssl%]
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    test: ~

monolog:
    handlers:
        main:
            type:   stream
            path:   "%kernel.logs_dir%/%kernel.environment%.log"
            level:  notice
        console:
            type:   console
            bubble: false

stash:
    caches:
        default:
            drivers: [ Memcache ]
            Memcache:
                servers:
                    - { server: 127.0.0.1, port: 11211, weight: 1 }

#Elasticsearch Bundle
ongr_elasticsearch:
    connections:
        default:
            hosts:
                - { host: 127.0.0.1:9200 }
            index_name: ongr-settings-test
            settings:
                number_of_shards: 2
                number_of_replicas: 0
                index:
                    refresh_interval: -1
                analysis:
                    tokenizer:
                        pathTokenizer:
                            type : path_hierarchy
                            buffer_size: 2024
                            skip: 0
                            delimiter: /
                    filter:
                        incremental_filter:
                            type: edge_ngram
                            min_gram: 1
                            max_gram: 20
                    analyzer:
                        indexAnalyzer:
                            type: snowball
                            language: German2
                            stopwords: "der,die,das,mit,und,für"
                        searchAnalyzer:
                            type: snowball
                            language: German2
                            stopwords: "der,die,das,mit,und,für"
                        pathAnalyzer:
                            type: custom
                            tokenizer: pathTokenizer
                        urlAnalyzer:
                            type: custom
                            tokenizer: keyword
                            filter: [lowercase]
                        incrementalAnalyzer:
                            type: custom
                            tokenizer: standard
                            filter:
                                - lowercase
                                - incremental_filter
    managers:
        default:
            connection: default
            mappings:
              - ONGRSettingsBundle

services:
    project.cookie_bar:
        class: %ongr_cookie.json.class%
        arguments: [ cookie_bar ]
        calls:
            - [setDefaults, [{http_only: false}]]
        tags:
            - { name: ongr_cookie.cookieNew }

    project.controller.cookie:
        class: ONGR\CookiesBundle\Tests\Fixtures\Cookie\CookieController
        calls:
            - [setContainer, [@service_container]]

    project.controller.flash_bag:
        class: ONGR\SettingsBundle\Tests\Fixtures\FlashBag\FlashBagController
        calls:
            - [setContainer, [@service_container]]

    project.cookie.ab_settings:
        class: %ongr_cookie.json.class%
        arguments: [ ongr_ab_settings ]
        tags:
            - { name: ongr_cookie.cookie }

    ongr_settings.dummy_service:
        class: ONGR\SettingsBundle\Tests\Functional\DependencyInjection\DummyService
        tags:
            - { name: 'ongr_settings.setting_aware', setting: 'setting_1' }

    ongr_settings.dummy_profile_provider:
        class: %ongr_settings.settings_provider.class%
        arguments: [domain_foo]
        calls:
            - [setManager, [@es.manager]]

ongr_settings:
    profiles: [ test1, test2, default, meh ]
    admin_user:
        categories:
            category_1:
                name: Category 1
                description: cat_desc_1
            category_2:
                name: Category 2

        settings:
            foo_setting_1:
                name: Foo Setting 1
                category: category_1
                description: 'foo_desc_1'
            foo_setting_2:
                name: Foo Setting 2
                category: category_1
            foo_setting_3:
                name: Foo Setting 3
                category: category_2
                description: 'foo_desc_3'