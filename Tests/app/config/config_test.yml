imports:
    - { resource: parameters_test.yml }

# Framework Configuration
framework:
    esi:             ~
    fragments:       { path: /_proxy }
    translator:      { fallback: "%locale%" }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: %kernel.debug%
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: 201204261
        assets_base_urls:
            http: [%cdn_url%]
            ssl: [%cdn_url_ssl%]
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    test: ~

monolog:
    handlers:
        main:
            type:   stream
            path:   "%kernel.logs_dir%/%kernel.environment%.log"
            level:  notice
        console:
            type:   console
            bubble: false

stash:
    caches:
        files:
            handlers: [ FileSystem ]
            FileSystem:
                dirSplit:               2
                path:                   %kernel.cache_dir%/stash
                filePermissions:        0660
                dirPermissions:         0770
                memKeyLimit:            20

ongr_admin:
    currency:
        default: EUR
        exchange:
            cache: stash.files_cache
            driver:
                custom: custom_exchange_driver_service

services:
    ongr_admin.environment_variables_pass_test_service:
        class: ONGR\AdminBundle\Service\FileLockService
        arguments:
            - ''
            - %ongr_admin.environment_variables_pass_test_param%

    custom_exchange_driver_service:
        class: ONGR\AdminBundle\Tests\Fixtures\Currency\CurrencyGetterService

    foo_settings_provider:
        class: ONGR\AdminBundle\Tests\FooSettingsProvider
        tags:
            - { name: ongr_admin.settings_provider, method: getFooSets } # method attribute is optional

    project.cookie_foo:
        class: %ongr_admin.cookie.json.class%
        arguments: [ cookie_foo ]
        calls:
            - [setDefaults, [{http_only: false}]]
        tags:
            - { name: ongr_admin.cookie }

    project.controller.cookie:
        class: ONGR\AdminBundle\Tests\Fixtures\Cookie\CookieController
        calls:
            - [setContainer, [@service_container]]

    project.controller.flash_bag:
        class: ONGR\AdminBundle\Tests\Fixtures\FlashBag\FlashBagController
        calls:
            - [setContainer, [@service_container]]

    project.cookie.ab_settings:
        class: %ongr_admin.cookie.json.class%
        arguments: [ ongr_ab_settings ]
        tags:
            - { name: ongr_admin.cookie }
